@page "/estudiantes"

<div class="main-header-list">
    <h2>Lista de estudiante</h2>
    <button type="button" class="btn btn-success" @onclick="AgregarEstudiante">+ Agregar</button>
    <div class="filter">
        <select class="custom-select" @bind="indexSelect">
            <option value="0">Filtrar por</option>
            <option value="1">Id</option>
            <option value="2">Nombre</option>
            <option value="3">Semestre</option>
            <option value="4">Nacionalidad</option>
        </select>
        <input type="@(indexSelect == 1 ? "number" : "text")" @bind="criterioDeBusqueda"/>
        <button class="btn btn-outline-primary" @onclick="FiltarEstudiantes">Buscar</button>
    </div>
</div>


<table class="table table-hover">
    <thead class="thead-light">
        <tr>
            <th>Id</th>
            <th>Nombres</th>
            <th>Semestre</th>
            <th>Nacionalidad</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var estudiante in EstudiantesFiltrados) {
            <tr>
                <td>@estudiante.EstudianteId</td>
                <td>@estudiante.Nombres</td>
                <td>@estudiante.Semestre</td>
                <td>@estudiante.Nacionalidad</td>
                <td><button class="btn btn-warning" @onclick="()=>ModificarEstudiante(estudiante)">Mas</button></td>
            </tr>
        }
    </tbody>
</table>

@if (MostraDialogoEditor) {
    <DialogoEditorEstudiantes 
                       estudiante="estudianteEnModificacion"
                       OnClose="OcultarDialogo"
                       EsNuevoEstudiante="esNuevo"/>
}



@code {

    bool MostraDialogoEditor = false;
    bool esNuevo = false;

    int indexSelect = 0; //indice actual del select
    string criterioDeBusqueda;

    Estudiante estudianteEnModificacion = new Estudiante();

    public List<Estudiante> Estudiantes { get; set; }
    public List<Estudiante> EstudiantesFiltrados { get; set; }

    protected override void OnInitialized() {
        Estudiantes = EstudiantesBLL.GetEstudiantes();
        EstudiantesFiltrados = Estudiantes;
    }

    void ModificarEstudiante(Estudiante estudiante) {
        estudianteEnModificacion = estudiante;
        esNuevo = false;
        MostraDialogoEditor = true;
    }

    void AgregarEstudiante() {
        estudianteEnModificacion = new Estudiante();
        esNuevo = true;
        MostraDialogoEditor = true;
    }

    void OcultarDialogo() {
        MostraDialogoEditor = false;
        Estudiantes = EstudiantesBLL.GetEstudiantes();
    }

    void FiltarEstudiantes() {

        if (indexSelect == 0) {//Todos

            EstudiantesFiltrados = Estudiantes.Where(e => true).ToList();

        } else if (indexSelect == 1) {//Id

            if (int.TryParse(criterioDeBusqueda , out int Id)) {

                EstudiantesFiltrados = Estudiantes.Where(e => e.EstudianteId == Id).ToList();
            }

        } else if (indexSelect == 2) {//Nombre

            EstudiantesFiltrados = Estudiantes.Where(e => e.Nombres.ToLower().Contains(criterioDeBusqueda.ToLower())).ToList();

        } else if (indexSelect == 3) {//Semestre

            if (int.TryParse(criterioDeBusqueda , out int semestre)) {

                EstudiantesFiltrados = Estudiantes.Where(e => e.Semestre == semestre).ToList();
            }

        } else if (indexSelect == 4) {//Nacionalidad

            EstudiantesFiltrados = Estudiantes.Where(e => e.Nacionalidad == criterioDeBusqueda).ToList();

        }

    }



}